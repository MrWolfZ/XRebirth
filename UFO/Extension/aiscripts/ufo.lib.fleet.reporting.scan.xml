<?xml version="1.0" encoding="utf-8" ?>
<!-- 
	This file is part of the X Rebirth UFO mod.
	
	Author: MadJoker
  
  Last Change:
	Version: V0.5.0 Beta
	Date: 26th Apr 2014
  
  X Rebirth version: 1.30
-->

<!--
  This script checks the environment of a given ship for enemies.
  Returns the enemy group.
-->
<aiscript name="ufo.lib.fleet.reporting.scan" version="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../Resources/aiscripts.xsd">
  <params>
    <!-- At what additional distance are we engaging capital ships? -->
    <param name="mCapShipOffset" default="3.5km" />
    <!-- The factor we multiply the allowed distance by if an enemy was reported by fleet command -->
    <param name="fReportLenienceFactor" default="2f" />
  </params>
  <actions>
    <run_script name="'mj.lib.log'" sinceversion="1">
      <param name="iDebugLevel" value="global.$UFO.$iDebugLevel" />
      <save_retval name="sLogFormat" variable="$sLogFormat" />
      <save_retval name="iLogError" variable="$iLogError" />
      <save_retval name="iLogInfo" variable="$iLogInfo" />
      <save_retval name="iLogFine" variable="$iLogFine" />
      <save_retval name="iLogFinest" variable="$iLogFinest" />
    </run_script>

    <!-- Sanity checks -->
    <do_if value="not this.$UFO? or not @this.$UFO.$Fleet">
      <debug_text filter="error" text="$sLogFormat.[player.age,'This script should only be run on entities with a valid UFO state container and that are part of a fleet.']" />
      <return />
    </do_if>

    <!-- Set all state variables -->
    <set_value name="$Fleet" exact="this.$UFO.$Fleet" />
    <set_value name="$mEngageDist" exact="this.$UFO.$mEngageDist" />

    <!-- Run initilization script -->
    <run_script name="'ufo.lib.fleet.reporting.initialize'" sinceversion="1" />

    <debug_text text="$sLogFormat.[player.age,'Checking for enemies to engage in %1m...'.[$mEngageDist]]" filter="error" chance="$iLogFinest" />
    
    <!-- Once the existing reports are checked, we scan the environment ourselves -->
    <find_gravidar_contact groupname="$gEnemies" object="this.ship" functional="true" multiple="true">
      <match_any>
        <match>
          <match_any>
            <match class="class.ship_xs" />
            <match class="class.ship_s" />
            <match class="class.ship_m" />
          </match_any>
          <match_distance object="this.ship" max="$mEngageDist" />
        </match>
        <!-- We need special handling for capital ships, since those are very big and therefore distances are off -->
        <match>
          <match_any>
            <match class="class.ship_l" />
            <match class="class.ship_xl" />
            <match class="class.station" />
          </match_any>
          <match_distance object="this.ship" max="$mEngageDist + $mCapShipOffset" />
        </match>
      </match_any>
      <match_relation object="this.ship" relation="enemy" comparison="le"/>
    </find_gravidar_contact>

    <debug_text text="$sLogFormat.[player.age,'Found %1 enemies.'.[$gEnemies.count]]" filter="error" chance="$iLogFinest" />

    <return value="$gEnemies" />
  </actions>
</aiscript>