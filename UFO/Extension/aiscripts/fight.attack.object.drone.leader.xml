<?xml version="1.0" encoding="utf-8" ?>
<!-- 
	This file is part of the X Rebirth UFO mod.
	
	Author: MadJoker
  
	Last Change:
	Version: V0.5.0 Beta
	Date: 1st May 2014
  
	X Rebirth version: 1.31
-->

<!--
  Fixes an issue with drone fighter squadrons that only the leader would dock.
-->
<diff xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <add sel="//params" pos="after">
    <interrupts>
      <handler>
        <conditions>
          <event_object_destroyed object="this.ship" />
        </conditions>
        <actions>
          <add_to_group groupname="$gDrones" list="this.ship.subordinates" />

          <!-- Use last drone as commander -->
          <!-- TODO: choose commander by strength -->
          <set_value name="$oDroneCommander" exact="$gDrones.{$gDrones.count}" />
          <start_script object="$oDroneCommander.pilot" name="'fight.attack.object.drone.leader'">
            <!-- TODO: better way of choosing target -->
            <param name="target" value="$gDroneAttackTargets.{1}" />
          </start_script>

          <!-- Then we can assign the followers -->
          <do_if value="@$oDroneCommander.pilot.$subordinatescript">
            <do_all exact="$gDrones.count - 1" counter="$i">
              <set_value name="$oDrone" exact="$gDrones.{$i}" />
              <set_object_commander object="$oDrone" commander="$oDroneCommander" />
              <start_script object="$oDrone.pilot" name="this.pilot.$subordinatescript" />
            </do_all>
          </do_if>
        </actions>
      </handler>
    </interrupts>
  </add>
  <replace sel="//attention[@min='visible']//do_if[@value='this.ship.commander.isoperational']">
    <do_if value="this.ship.commander.isoperational">
      <!-- First, we have to tell all our subordinates to dock -->
      <do_all exact="@this.ship.subordinates.count" counter="$i">
        <start_script name="'move.dockat.drone'" object="this.ship.subordinates.{$i}.pilot">
          <param name="destination" value="this.ship.commander" />
        </start_script>
      </do_all>
      <run_script name="'move.dockat.drone'">
        <param name="destination" value="this.ship.commander" />
      </run_script>
    </do_if>
  </replace>
  <replace sel="//attention[@min='visible']//do_elseif[@value='$DestroyWhenOrphaned']">
    <do_elseif value="$DestroyWhenOrphaned">
      <destroy_object object="this.ship" />
      <do_all exact="@this.ship.subordinates.count" counter="$i">
        <abort_scripts entity="this.ship.subordinates.{$i}.pilot" />
        <destroy_object object="this.ship.subordinates.{$i}" />
      </do_all>
    </do_elseif>
  </replace>
  <replace sel="//attention[@min='unknown']//do_if[@value='this.ship.commander.isoperational']">
    <do_if value="this.ship.commander.isoperational">
      <!-- First, we have to tell all our subordinates to dock -->
      <do_all exact="@this.ship.subordinates.count" counter="$i">
        <start_script name="'move.dockat.drone'" object="this.ship.subordinates.{$i}.pilot">
          <param name="destination" value="this.ship.commander" />
        </start_script>
      </do_all>
      <run_script name="'move.dockat.drone'">
        <param name="destination" value="this.ship.commander" />
      </run_script>
    </do_if>
  </replace>
  <replace sel="//attention[@min='unknown']//do_else">
    <do_elseif value="$DestroyWhenOrphaned">
      <destroy_object object="this.ship" explosion="false" />
      <do_all exact="@this.ship.subordinates.count" counter="$i">
        <abort_scripts entity="this.ship.subordinates.{$i}.pilot" />
        <destroy_object object="this.ship.subordinates.{$i}" explosion="false" />
      </do_all>
    </do_elseif>
  </replace>
</diff>